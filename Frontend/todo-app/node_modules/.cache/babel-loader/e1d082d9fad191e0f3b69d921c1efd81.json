{"ast":null,"code":"import _classCallCheck from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\temp\\\\frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TodoComponent = /*#__PURE__*/function (_Component) {\n  _inherits(TodoComponent, _Component);\n\n  var _super = _createSuper(TodoComponent);\n\n  function TodoComponent(props) {\n    var _this;\n\n    _classCallCheck(this, TodoComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      id: _this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(TodoComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.state.id === -1) {\n        return;\n      }\n\n      var username = AuthenticationService.getLoggedInUserName();\n      TodoDataService.retrieveTodo(username, this.state.id).then(function (response) {\n        return _this2.setState({\n          description: response.data.description,\n          targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n        });\n      });\n    }\n  }, {\n    key: \"validate\",\n    value: function validate(values) {\n      var errors = {};\n\n      if (!values.description) {\n        errors.description = 'Enter a Description';\n      } else if (values.description.length < 5) {\n        errors.description = 'Enter atleast 5 Characters in Description';\n      }\n\n      if (!moment(values.targetDate).isValid()) {\n        errors.targetDate = 'Enter a valid Target Date';\n      }\n\n      return errors;\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(values) {\n      var _this3 = this;\n\n      var username = AuthenticationService.getLoggedInUserName();\n      var todo = {\n        id: this.state.id,\n        description: values.description,\n        targetDate: values.targetDate\n      };\n\n      if (this.state.id === -1) {\n        TodoDataService.createTodo(username, todo).then(function () {\n          return _this3.props.history.push('/todos');\n        });\n      } else {\n        TodoDataService.updateTodo(username, this.state.id, todo).then(function () {\n          return _this3.props.history.push('/todos');\n        });\n      }\n\n      console.log(values);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$state = this.state,\n          description = _this$state.description,\n          targetDate = _this$state.targetDate;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              description: description,\n              targetDate: targetDate\n            },\n            onSubmit: this.onSubmit,\n            validateOnChange: false,\n            validateOnBlur: false,\n            validate: this.validate,\n            enableReinitialize: true,\n            children: function children(props) {\n              return /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"description\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, _this4), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"targetDate\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, _this4), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 41\n                  }, _this4), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control\",\n                    type: \"text\",\n                    name: \"description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 41\n                  }, _this4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 37\n                }, _this4), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"Target Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 41\n                  }, _this4), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control\",\n                    type: \"date\",\n                    name: \"targetDate\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 41\n                  }, _this4)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 37\n                }, _this4), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  type: \"submit\",\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, _this4)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, _this4);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this);\n    }\n  }]);\n\n  return TodoComponent;\n}(Component);\n\nexport default TodoComponent;","map":{"version":3,"sources":["D:/temp/frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","TodoComponent","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","username","getLoggedInUserName","retrieveTodo","then","response","setState","data","values","errors","length","isValid","todo","createTodo","history","push","updateTodo","console","log"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport moment from 'moment'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService.js'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass TodoComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            id : this.props.match.params.id,\n            description : '',\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\n        }\n\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n\n    }\n\n    componentDidMount() {\n        if(this.state.id===-1) {\n            return\n        }\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoDataService.retrieveTodo(username, this.state.id)\n             .then(response => this.setState({\n                description: response.data.description,\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD')\n            })\n        )\n    }\n\n    validate(values) {\n        let errors = {}\n        if(!values.description) {\n            errors.description = 'Enter a Description'\n        } else if(values.description.length<5) {\n            errors.description = 'Enter atleast 5 Characters in Description'\n        }\n        if(!moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a valid Target Date'\n        }\n        return errors\n    }\n\n    onSubmit(values) {\n        let username = AuthenticationService.getLoggedInUserName()\n        let todo = {\n            id: this.state.id,\n            description: values.description,\n            targetDate: values.targetDate\n        }\n\n        if (this.state.id === -1) {\n            TodoDataService.createTodo(username, todo)\n                .then(() => this.props.history.push('/todos'))\n        } else {\n            TodoDataService.updateTodo(username, this.state.id, todo)\n                .then(() => this.props.history.push('/todos'))\n        }\n        \n        console.log(values);\n    }\n\n    render() {\n        \n        let {description,targetDate} = this.state\n        return (\n            <div>\n                <h1>Todo</h1>\n                <div className=\"container\">\n                    <Formik \n                        initialValues={{description,targetDate}}\n                        onSubmit={this.onSubmit}\n                        validateOnChange={false}\n                        validateOnBlur={false}\n                        validate={this.validate}\n                        enableReinitialize={true}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" \n                                                                className=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" \n                                                                className=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\n                                    </fieldset>\n                                    <button className=\"btn btn-success\" type=\"submit\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                \n                </div>                \n            </div>\n        )\n    }\n}\n\nexport default TodoComponent"]},"metadata":{},"sourceType":"module"}
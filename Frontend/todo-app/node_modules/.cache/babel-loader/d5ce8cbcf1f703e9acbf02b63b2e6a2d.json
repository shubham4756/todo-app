{"ast":null,"code":"// import API from '../../api/todo/axiosInstance.js'\nimport axios from 'axios';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    // let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password) \n    sessionStorage.setItem('authenticatedUser', username);\n    sessionStorage.setItem('token', basicAuthHeader);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return false;\n    return true;\n  }\n\n  getLoggedInUserName() {\n    let user = sessionStorage.getItem('authenticatedUser');\n    if (user === null) return '';\n    return user;\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["D:/Spring -Boot-React-Js/Frontend/todo-app/src/components/todo/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","username","password","sessionStorage","setItem","basicAuthHeader","logout","removeItem","isUserLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AACxBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAoB;AACvC;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA2CH,QAA3C;AACAE,IAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAA+BC,eAA/B;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLH,IAAAA,cAAc,CAACI,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAG;AACb,QAAIC,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAGD,IAAI,KAAG,IAAV,EAAgB,OAAO,KAAP;AAChB,WAAO,IAAP;AACH;;AAEDE,EAAAA,mBAAmB,GAAG;AAClB,QAAIF,IAAI,GAAGN,cAAc,CAACO,OAAf,CAAuB,mBAAvB,CAAX;AACA,QAAID,IAAI,KAAK,IAAb,EAAmB,OAAO,EAAP;AACnB,WAAOA,IAAP;AACH;;AArBuB;;AAwB5B,eAAe,IAAIV,qBAAJ,EAAf","sourcesContent":["// import API from '../../api/todo/axiosInstance.js'\r\nimport axios from 'axios'\r\n\r\nclass AuthenticationService {\r\n    registerSuccessfulLogin(username,password) {\r\n        // let basicAuthHeader = 'Basic ' + window.btoa(username + \":\" + password) \r\n        sessionStorage.setItem('authenticatedUser',username)\r\n        sessionStorage.setItem('token',basicAuthHeader);\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem('authenticatedUser')\r\n    }\r\n\r\n    isUserLoggedIn() {\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if(user===null) return false;\r\n        return true;\r\n    }\r\n\r\n    getLoggedInUserName() {\r\n        let user = sessionStorage.getItem('authenticatedUser')\r\n        if (user === null) return ''\r\n        return user\r\n    }\r\n}\r\n\r\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}
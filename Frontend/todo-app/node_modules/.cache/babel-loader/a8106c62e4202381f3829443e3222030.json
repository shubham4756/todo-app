{"ast":null,"code":"import _classCallCheck from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/temp/frontend/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar TodoDataService = /*#__PURE__*/function () {\n  function TodoDataService() {\n    _classCallCheck(this, TodoDataService);\n  }\n\n  _createClass(TodoDataService, [{\n    key: \"retrieveAllTodos\",\n    value: function retrieveAllTodos(name) {\n      return axios.get(\"http://localhost:8080/users/\".concat(name, \"/todos\"), {\n        headers: {\n          authorization: sessionStorage.getItem('token')\n        }\n      });\n    }\n  }, {\n    key: \"retrieveTodo\",\n    value: function retrieveTodo(name, id) {\n      return axios.get(\"http://localhost:8080/users/\".concat(name, \"/todos/\").concat(id), {\n        headers: {\n          authorization: sessionStorage.getItem('token')\n        }\n      });\n    }\n  }, {\n    key: \"deleteTodo\",\n    value: function deleteTodo(name, id) {\n      return axios.delete(\"http://localhost:8080/users/\".concat(name, \"/todos/\").concat(id), {\n        headers: {\n          authorization: sessionStorage.getItem('token')\n        }\n      });\n    }\n  }, {\n    key: \"updateTodo\",\n    value: function updateTodo(name, id, todo) {\n      return axios.put(\"http://localhost:8080/users/\".concat(name, \"/todos/\").concat(id), todo, {\n        headers: {\n          authorization: sessionStorage.getItem('token')\n        }\n      });\n    }\n  }, {\n    key: \"createTodo\",\n    value: function createTodo(name, todo) {\n      return axios.post(\"http://localhost:8080/users/\".concat(name, \"/todos/\"), todo, {\n        headers: {\n          authorization: sessionStorage.getItem('token')\n        }\n      });\n    }\n  }]);\n\n  return TodoDataService;\n}();\n\nexport default new TodoDataService();","map":{"version":3,"sources":["D:/temp/frontend/todo-app/src/api/todo/TodoDataService.js"],"names":["axios","TodoDataService","name","get","headers","authorization","sessionStorage","getItem","id","delete","todo","put","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,e;;;;;;;WACF,0BAAiBC,IAAjB,EAAuB;AACnB,aAAOF,KAAK,CAACG,GAAN,uCAAyCD,IAAzC,aACL;AAAEE,QAAAA,OAAO,EAAG;AAAEC,UAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAjB;AAAZ,OADK,CAAP;AAGH;;;WAED,sBAAaL,IAAb,EAAmBM,EAAnB,EAAuB;AACnB,aAAOR,KAAK,CAACG,GAAN,uCAAyCD,IAAzC,oBAAuDM,EAAvD,GACL;AAAEJ,QAAAA,OAAO,EAAG;AAAEC,UAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAjB;AAAZ,OADK,CAAP;AAGH;;;WAED,oBAAWL,IAAX,EAAiBM,EAAjB,EAAqB;AACjB,aAAOR,KAAK,CAACS,MAAN,uCAA4CP,IAA5C,oBAA0DM,EAA1D,GACL;AAAEJ,QAAAA,OAAO,EAAG;AAAEC,UAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAjB;AAAZ,OADK,CAAP;AAGH;;;WAED,oBAAWL,IAAX,EAAiBM,EAAjB,EAAqBE,IAArB,EAA2B;AACvB,aAAOV,KAAK,CAACW,GAAN,uCAAyCT,IAAzC,oBAAuDM,EAAvD,GAA6DE,IAA7D,EACL;AAAEN,QAAAA,OAAO,EAAG;AAAEC,UAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAjB;AAAZ,OADK,CAAP;AAGH;;;WAED,oBAAWL,IAAX,EAAiBQ,IAAjB,EAAuB;AACnB,aAAOV,KAAK,CAACY,IAAN,uCAA0CV,IAA1C,cAAyDQ,IAAzD,EACL;AAAEN,QAAAA,OAAO,EAAG;AAAEC,UAAAA,aAAa,EAAEC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AAAjB;AAAZ,OADK,CAAP;AAEH;;;;;;AAIL,eAAe,IAAIN,eAAJ,EAAf","sourcesContent":["import axios from 'axios'\n\nclass TodoDataService {\n    retrieveAllTodos(name) {\n        return axios.get(`http://localhost:8080/users/${name}/todos`\n        , { headers : { authorization: sessionStorage.getItem('token') } }\n        );\n    }\n\n    retrieveTodo(name, id) {\n        return axios.get(`http://localhost:8080/users/${name}/todos/${id}`\n        , { headers : { authorization: sessionStorage.getItem('token') } }\n        );\n    }\n\n    deleteTodo(name, id) {\n        return axios.delete(`http://localhost:8080/users/${name}/todos/${id}`\n        , { headers : { authorization: sessionStorage.getItem('token') } }\n        );\n    }\n\n    updateTodo(name, id, todo) {\n        return axios.put(`http://localhost:8080/users/${name}/todos/${id}`, todo\n        , { headers : { authorization: sessionStorage.getItem('token') } }\n        );\n    }\n\n    createTodo(name, todo) {\n        return axios.post(`http://localhost:8080/users/${name}/todos/`, todo\n        , { headers : { authorization: sessionStorage.getItem('token') } });\n    }\n\n}\n\nexport default new TodoDataService()"]},"metadata":{},"sourceType":"module"}
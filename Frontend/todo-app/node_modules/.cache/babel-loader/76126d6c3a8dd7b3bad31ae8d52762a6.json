{"ast":null,"code":"var _jsxFileName = \"D:\\\\Spring -Boot-React-Js\\\\Frontend\\\\todo-app\\\\src\\\\components\\\\todo\\\\TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport TodoDataService from '../../api/todo/TodoDataService';\nimport AuthenticationService from './AuthenticationService.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      description: '',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.id === -1) return;\n    let user = AuthenticationService.getLoggedInUserName();\n    TodoDataService.retriveTodo(user, this.state.id).then(response => this.setState({\n      description: response.data.description,\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    })).catch();\n  }\n\n  validate(values) {\n    let error = {};\n\n    if (!values.description) {\n      error.description = \"Enter a Description\";\n    } else if (values.description.length < 5) {\n      error.description = \"Enter atleast 5 Characters in Description\";\n    }\n\n    if (!moment(values.targetDate).isValid()) {\n      error.targetDate = \"Enter a valid Target Date\";\n    }\n\n    return error;\n  }\n\n  onSubmit(values) {\n    let user = AuthenticationService.getLoggedInUserName();\n    let todo = {\n      id: this.state.id,\n      description: values.description,\n      targetDate: values.targetDate\n    };\n\n    if (this.state.id === -1) {\n      TodoDataService.createTodo(user, todo).then(() => this.props.history.push('/todos'));\n    } else {\n      TodoDataService.updateTodo(user, this.state.id, too).then(() => this.props.history.push('/todos'));\n    }\n\n    console.log(values);\n  }\n\n  render() {\n    let {\n      description,\n      targetDate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            description,\n            targetDate\n          },\n          onSubmit: this.onSubmit,\n          validateOnChange: false,\n          validateOnBlur: false,\n          validate: this.validate,\n          enableReinitialize: true,\n          children: props => /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"targetDate\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"date\",\n                name: \"targetDate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["D:/Spring -Boot-React-Js/Frontend/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoDataService","AuthenticationService","TodoComponent","constructor","props","state","id","match","params","description","targetDate","Date","format","onSubmit","bind","validate","componentDidMount","user","getLoggedInUserName","retriveTodo","then","response","setState","data","catch","values","error","length","isValid","todo","createTodo","history","push","updateTodo","too","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'  \r\nimport TodoDataService from '../../api/todo/TodoDataService'\r\nimport AuthenticationService from './AuthenticationService.js'\r\n\r\nclass TodoComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id : this.props.match.params.id,\r\n            description: '',\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD')\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if(this.state.id===-1) \r\n            return\r\n\r\n        let user = AuthenticationService.getLoggedInUserName()\r\n        TodoDataService.retriveTodo(user,this.state.id)\r\n        .then( response =>  this.setState({\r\n            description: response.data.description,\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD')\r\n        }))\r\n        .catch()\r\n    }\r\n\r\n    validate(values) {\r\n        let error = {}\r\n        if(!values.description) {\r\n            error.description = \"Enter a Description\"\r\n        } else if(values.description.length < 5) {\r\n            error.description = \"Enter atleast 5 Characters in Description\"\r\n        } \r\n\r\n        if(!moment(values.targetDate).isValid()) {\r\n            error.targetDate = \"Enter a valid Target Date\"\r\n        }\r\n\r\n        return error;\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let user = AuthenticationService.getLoggedInUserName()\r\n        let todo = {\r\n            id: this.state.id,\r\n            description: values.description,\r\n            targetDate: values.targetDate\r\n        }\r\n        if(this.state.id === -1) {\r\n            TodoDataService.createTodo(user,todo).then( () => this.props.history.push('/todos'))\r\n        } else {\r\n            TodoDataService.updateTodo(user,this.state.id,too).then( () => this.props.history.push('/todos'))\r\n        }\r\n        console.log(values);\r\n    }\r\n\r\n    render() {\r\n        let {description, targetDate} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>Todo</h1>\r\n                <div className=\"container\">\r\n                    <Formik \r\n                        initialValues={{description,targetDate}}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning\" />\r\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" className=\"alert alert-warning\" />\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Description</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\" /> \r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Target Date</label>\r\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\" /> \r\n                                    </fieldset>\r\n                                    <button className=\"btn btn-success\" type=\"submit\" >Save</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoComponent\r\n"]},"metadata":{},"sourceType":"module"}